# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: api/fuota.proto for package 'ChirpStackAPI.API'

require 'grpc'
require 'api/fuota_pb'

module ChirpStackAPI
  module API
    module FuotaService
      # FuotaService is the service providing API methods for FUOTA deployments.
      class Service

        include ::GRPC::GenericService

        self.marshal_class_method = :encode
        self.unmarshal_class_method = :decode
        self.service_name = 'api.FuotaService'

        # Create the given FUOTA deployment.
        rpc :CreateDeployment, ::ChirpStackAPI::API::CreateFuotaDeploymentRequest, ::ChirpStackAPI::API::CreateFuotaDeploymentResponse
        # Get the FUOTA deployment for the given ID.
        rpc :GetDeployment, ::ChirpStackAPI::API::GetFuotaDeploymentRequest, ::ChirpStackAPI::API::GetFuotaDeploymentResponse
        # Update the given FUOTA deployment.
        rpc :UpdateDeployment, ::ChirpStackAPI::API::UpdateFuotaDeploymentRequest, ::Google::Protobuf::Empty
        # Delete the FUOTA deployment for the given ID.
        rpc :DeleteDeployment, ::ChirpStackAPI::API::DeleteFuotaDeploymentRequest, ::Google::Protobuf::Empty
        # Start the FUOTA deployment.
        rpc :StartDeployment, ::ChirpStackAPI::API::StartFuotaDeploymentRequest, ::Google::Protobuf::Empty
        # List the FUOTA deployments.
        rpc :ListDeployments, ::ChirpStackAPI::API::ListFuotaDeploymentsRequest, ::ChirpStackAPI::API::ListFuotaDeploymentsResponse
        # Add the given DevEUIs to the FUOTA deployment.
        rpc :AddDevices, ::ChirpStackAPI::API::AddDevicesToFuotaDeploymentRequest, ::Google::Protobuf::Empty
        # Remove the given DevEUIs from the FUOTA deployment.
        rpc :RemoveDevices, ::ChirpStackAPI::API::RemoveDevicesFromFuotaDeploymentRequest, ::Google::Protobuf::Empty
        # List FUOTA Deployment devices.
        rpc :ListDevices, ::ChirpStackAPI::API::ListFuotaDeploymentDevicesRequest, ::ChirpStackAPI::API::ListFuotaDeploymentDevicesResponse
        # Add the given Gateway IDs to the FUOTA deployment.
        # By default, ChirpStack will automatically select the minimum amount of
        # gateways needed to cover all devices within the multicast-group. Setting
        # the gateways manually overrides this behaviour.
        rpc :AddGateways, ::ChirpStackAPI::API::AddGatewaysToFuotaDeploymentRequest, ::Google::Protobuf::Empty
        # List the gateways added to the FUOTA deployment.
        rpc :ListGateways, ::ChirpStackAPI::API::ListFuotaDeploymentGatewaysRequest, ::ChirpStackAPI::API::ListFuotaDeploymentGatewaysResponse
        # Remove the given Gateway IDs from the FUOTA deployment.
        rpc :RemoveGateways, ::ChirpStackAPI::API::RemoveGatewaysFromFuotaDeploymentRequest, ::Google::Protobuf::Empty
        # List jobs for the given FUOTA deployment.
        rpc :ListJobs, ::ChirpStackAPI::API::ListFuotaDeploymentJobsRequest, ::ChirpStackAPI::API::ListFuotaDeploymentJobsResponse
      end

      Stub = Service.rpc_stub_class
    end
  end
end
