# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: api/user.proto for package 'ChirpStackAPI.API'

require 'grpc'
require 'api/user_pb'

module ChirpStackAPI
  module API
    module UserService
      # UserService is the service providing API methods for managing users.
      class Service

        include ::GRPC::GenericService

        self.marshal_class_method = :encode
        self.unmarshal_class_method = :decode
        self.service_name = 'api.UserService'

        # Create a new user.
        rpc :Create, ::ChirpStackAPI::API::CreateUserRequest, ::ChirpStackAPI::API::CreateUserResponse
        # Get the user for the given ID.
        rpc :Get, ::ChirpStackAPI::API::GetUserRequest, ::ChirpStackAPI::API::GetUserResponse
        # Update the given user.
        rpc :Update, ::ChirpStackAPI::API::UpdateUserRequest, ::Google::Protobuf::Empty
        # Delete the user with the given ID.
        rpc :Delete, ::ChirpStackAPI::API::DeleteUserRequest, ::Google::Protobuf::Empty
        # Get the list of users.
        rpc :List, ::ChirpStackAPI::API::ListUsersRequest, ::ChirpStackAPI::API::ListUsersResponse
        # Update the password for the given user.
        rpc :UpdatePassword, ::ChirpStackAPI::API::UpdateUserPasswordRequest, ::Google::Protobuf::Empty
      end

      Stub = Service.rpc_stub_class
    end
  end
end
